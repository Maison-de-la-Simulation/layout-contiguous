name: CMake

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: DoozyX/clang-format-lint-action@v0.13
      with:
        source: 'src/ tests/'
        exclude: ''
        extensions: 'hpp,cpp'
        clangFormatVersion: 12

  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    env:
      mdspan_DIR: ${{github.workspace}}/mdspan/install
      GTest_DIR: ${{github.workspace}}/googletest/install

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Checkout mdspan
      uses: actions/checkout@v2
      with:
        repository: kokkos/mdspan
        ret: mdspan-0.6.0
        path: mdspan

    - name: Checkout googletest
      uses: actions/checkout@v2
      with:
        repository: google/googletest
        ref: release-1.11.0
        path: googletest

    - name: Coverage report
      run: python3 -m pip install gcovr

    - name: Install mdspan
      run: |
        cmake -S ${{github.workspace}}/mdspan -B ${{github.workspace}}/mdspan/build -DCMAKE_BUILD_TYPE=Release
        cmake --build ${{github.workspace}}/mdspan/build --config Release
        cmake --install ${{github.workspace}}/mdspan/build --prefix=${{env.mdspan_DIR}} --config Release

    - name: Install googletest
      run: |
        cmake -S ${{github.workspace}}/googletest -B ${{github.workspace}}/googletest/build -DCMAKE_BUILD_TYPE=Release
        cmake --build ${{github.workspace}}/googletest/build --config Release
        cmake --install ${{github.workspace}}/googletest/build --prefix=${{env.GTest_DIR}} --config Release

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_FLAGS=--coverage -DCMAKE_EXE_LINKER_FLAGS=-lgcov

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}

    - name: Coverage report
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: gcovr --filter src
